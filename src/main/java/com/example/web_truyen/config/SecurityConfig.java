package com.example.web_truyen.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SecurityConfig {
    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();
    }
//    @Bean
//    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
//        http
//                .csrf(csrf -> csrf.disable()) // T·∫Øt CSRF ƒë·ªÉ tr√°nh l·ªói truy c·∫≠p t√†i nguy√™n tƒ©nh
//                .authorizeHttpRequests(auth -> auth
//                        .requestMatchers("/uploads/**").permitAll()  // ‚úÖ Cho ph√©p truy c·∫≠p th∆∞ m·ª•c ·∫£nh
//                        .requestMatchers("/api/v1/user").permitAll() // ‚úÖ M·ªü API user
//                        .anyRequest().permitAll() // üîí C√°c API kh√°c y√™u c·∫ßu ƒëƒÉng nh·∫≠p
//                )
//                .formLogin(login -> login.disable()) // ‚ùå T·∫Øt form login m·∫∑c ƒë·ªãnh
//                .httpBasic(httpBasic -> httpBasic.disable()); // ‚ùå T·∫Øt x√°c th·ª±c HTTP Basic
//
//        return http.build();
//    }
}


